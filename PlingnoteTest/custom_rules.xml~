<?xml version="1.0" encoding="UTF-8"?>
<project name="PlingnoteTest" default="help">

    <!-- Test target -->
	<target name="test-custom" depends="-test-project-check" description="Runs tests from the package defined in test.package property">
	
	    <property name="tested.project.absolute.dir" location="${tested.project.dir}" />
	    <property name="test.runner" value="android.test.InstrumentationTestRunner" />
	
	    <!-- Application package of the tested project extracted from its manifest file -->
	    <xpath input="${tested.project.absolute.dir}/AndroidManifest.xml"
	            expression="/manifest/@package" output="tested.manifest.package" />
	    <xpath input="AndroidManifest.xml"
	            expression="/manifest/@package" output="manifest.package" />
	
	    <property name="emma.dump.file"
	            value="/data/data/${tested.manifest.package}/coverage.ec" />
	
	    <if condition="${emma.enabled}">
	        <then>
	            <echo>WARNING: Code Coverage is currently only supported on the emulator and rooted devices.</echo>
	            <run-tests-helper emma.enabled="true">
	                <extra-instrument-args>
	                    <arg value="-e" />
	                       <arg value="coverageFile" />
	                       <arg value="${emma.dump.file}" />
	                </extra-instrument-args>
	            </run-tests-helper>
	            <echo>Downloading coverage file into project directory...</echo>
	            <exec executable="${adb}" failonerror="true">
	                <arg line="${adb.device.arg}" />
	                <arg value="pull" />
	                <arg value="${emma.dump.file}" />
	                <arg value="coverage.ec" />
	            </exec>
	            <echo>Extracting coverage report...</echo>
	            <emma>
	                <!-- Grantland: Attach Android library project sources to the emma report -->
	                <report sourcepath="${tested.project.absolute.dir}/${source.dir};${tested.android.library.source.dir}"
	                                  verbosity="${verbosity}">
	                <!-- <report sourcepath="${tested.project.absolute.dir}/${source.dir}"
	                                  verbosity="${verbosity}"> -->
	                    <!-- TODO: report.dir or something like should be introduced if necessary -->
	                    <infileset dir=".">
	                        <include name="coverage.ec" />
	                        <include name="coverage.em" />
	                    </infileset>
	                    <!-- TODO: reports in other, indicated by user formats -->
	                    <html outfile="coverage.html" />
	                    <xml outfile="coverage.xml" />
	               </report>
	            </emma>
	            <echo>Cleaning up temporary files...</echo>
	            <delete file="coverage.ec" />
	            <delete file="coverage.em" />
	            <echo>Saving the report file in ${basedir}/coverage/coverage.html</echo>
	        </then>
	        <else>
	            <run-tests-helper />
	        </else>
	    </if>
	</target>


<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>

<target name="findbugs">
	<mkdir dir="reports" />
	<findbugs home="${findbugs.home}" output="html" outputFile="reports/findbugs.html" excludeFilter="findbugs-exclude.xml">
		<class location="../${out.dir}" />
	</findbugs>
</target>


</project>

